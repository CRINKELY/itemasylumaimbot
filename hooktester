print("Hook v2")

local Players = game:GetService("Players")
local LogList = {} -- Table to store logs

-- Function to log remote calls
local function logRemoteCall(remote, args)
    local logEntry = {
        RemoteName = remote.Name,
        Arguments = args,
        Time = os.time()
    }
    table.insert(LogList, logEntry)
    
    -- Print log to console
    print("Remote called: " .. remote.Name)
    for i, arg in ipairs(args) do
        print("Arg " .. i .. ": " .. tostring(arg))
    end
end

-- Hook function for logging
local function hookRemote(remoteType, methodName, ...)
    local args = {...}
    if typeof(remoteType) == "Instance" and (remoteType:IsA("RemoteEvent") or remoteType:IsA("RemoteFunction")) then
        logRemoteCall(remoteType, args)
    end
end

-- Hook metatable for Namecall
local originalNamecall
originalNamecall = hookmetamethod(game, "__namecall", newcclosure(function(self, ...)
    local methodName = getnamecallmethod()
    
    if (methodName == "FireServer" or methodName == "InvokeServer") then
        hookRemote(self, methodName, ...)
    end
    
    -- Call the original namecall method
    return originalNamecall(self, ...)
end))

print("Logging system initialized")
